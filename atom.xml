<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TheMrxk丶Blog</title>
  
  <subtitle>致力于分享自己计算机经验</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.orghub.cn/"/>
  <updated>2019-02-10T13:33:44.566Z</updated>
  <id>https://blog.orghub.cn/</id>
  
  <author>
    <name>TheMrxk个人博客</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构期末总结</title>
    <link href="https://blog.orghub.cn/2019/02/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%9C%9F%E6%9C%AB%E6%80%BB%E7%BB%93/"/>
    <id>https://blog.orghub.cn/2019/02/10/数据结构期末总结/</id>
    <published>2019-02-10T07:55:33.000Z</published>
    <updated>2019-02-10T13:33:44.566Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/02/10/数据结构期末总结/0.png" alt="0"></p><h1 id="数据结构重点分析及期末总结"><a href="#数据结构重点分析及期末总结" class="headerlink" title="数据结构重点分析及期末总结"></a>数据结构重点分析及期末总结</h1><ul><li>零分(网络ID)是某师范大学，计科专业的一名屌丝，针对数据结构一科目的期末算法编程考试总结了如下几个算法。</li></ul><h2 id="重点分析"><a href="#重点分析" class="headerlink" title="重点分析"></a>重点分析</h2><blockquote><p>简单题型</p><p>栈</p><p>队列</p><p>树</p><p>排序</p></blockquote><h3 id="简单题型"><a href="#简单题型" class="headerlink" title="简单题型"></a>简单题型</h3><p>往下翻……………</p><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> stackmax=<span class="number">100</span>;<span class="comment">//c初始值分配量</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> st;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> *base;</span><br><span class="line">    <span class="keyword">char</span> *top;</span><br><span class="line">    <span class="keyword">int</span> stacksize;</span><br><span class="line">&#125;<span class="built_in">stack</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initstack</span><span class="params">(<span class="built_in">stack</span> &amp;s)</span></span>&#123;<span class="comment">//初始化</span></span><br><span class="line">    s.base=<span class="keyword">new</span> st[stackmax];<span class="comment">//为顺序栈动态分配d一个最大容量为stachkmax的数组空间</span></span><br><span class="line">    <span class="keyword">if</span> (!s.base) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//储存分配空间失败</span></span><br><span class="line">    &#125;</span><br><span class="line">    s.top=s.base;<span class="comment">//top初始为base，空栈</span></span><br><span class="line">    s.stacksize=stackmax;<span class="comment">//置为栈的最大容量</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">putstack</span><span class="params">(<span class="built_in">stack</span> &amp;s,<span class="keyword">char</span> e)</span></span>&#123;<span class="comment">//入栈</span></span><br><span class="line">    <span class="keyword">if</span>(s.top-s.base==s.stacksize)&#123;<span class="comment">//当相等时为满栈</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"满栈"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    *s.top=e;<span class="comment">//元素e压入栈顶</span></span><br><span class="line">    s.top++;<span class="comment">//栈顶指针+1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">gettop</span><span class="params">(<span class="built_in">stack</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s.top!=s.base)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*(s.top<span class="number">-1</span>);<span class="comment">//取q栈顶指针</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">outstack</span><span class="params">(<span class="built_in">stack</span> &amp;s,<span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s.top==s.base) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e=*--s.top;<span class="comment">//将d栈顶元素给e向下移一位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disp</span><span class="params">(<span class="built_in">stack</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s.top-s.base;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s.base[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> e;</span><br><span class="line">    <span class="built_in">stack</span> s;</span><br><span class="line">    initstack(s);</span><br><span class="line">    putstack(s,<span class="string">'A'</span>);</span><br><span class="line">    putstack(s,<span class="string">'B'</span>);</span><br><span class="line">    putstack(s,<span class="string">'C'</span>);</span><br><span class="line">    putstack(s,<span class="string">'D'</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈S为："</span>;</span><br><span class="line">    disp(s);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈顶元素为："</span>;</span><br><span class="line">    e=gettop(s);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    outstack(s,e);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"栈顶出栈后的S："</span>;</span><br><span class="line">    disp(s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/6栈.png" alt="6栈"></p><h3 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>  MAXQSIZE=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> QElemType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span>  <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    QElemType *base;</span><br><span class="line">    <span class="keyword">int</span> front ;</span><br><span class="line">    <span class="keyword">int</span> rear;</span><br><span class="line">    </span><br><span class="line">&#125; SqQueue;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InitQueue</span><span class="params">(SqQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Q.base= <span class="keyword">new</span> QElemType[MAXQSIZE];</span><br><span class="line">    <span class="keyword">if</span>(!Q.base)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    Q.front =Q.rear=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EnQueue</span><span class="params">( SqQueue &amp;Q,QElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((Q.rear+<span class="number">1</span>)%MAXQSIZE==Q.front)<span class="comment">//队满</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"错误"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Q.base[Q.rear] =e;<span class="comment">//新元素插入队尾</span></span><br><span class="line">    Q.rear=(Q.rear+<span class="number">1</span>)%MAXQSIZE;<span class="comment">//队尾指针向后移动一位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lengt</span><span class="params">(SqQueue &amp;Q)</span><span class="comment">//求队长度</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (Q.rear-Q.front+MAXQSIZE)%MAXQSIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteQ</span><span class="params">(SqQueue &amp;Q,QElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.rear==Q.front)<span class="comment">//队空</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    e=Q.base[Q.front];<span class="comment">//保存对头元素</span></span><br><span class="line">    Q.front=(Q.front+<span class="number">1</span>)%MAXQSIZE;<span class="comment">//队头指针向后移动一位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span>   <span class="title">DisQ</span><span class="params">(SqQueue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,i;</span><br><span class="line">    m=lengt(Q);</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"空队列"</span>;</span><br><span class="line">    <span class="keyword">if</span>((Q.rear+<span class="number">1</span>)%MAXQSIZE==Q.front)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"队满"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=Q.front; i%MAXQSIZE!=Q.rear;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;Q.base[i];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqQueue Q;</span><br><span class="line">    QElemType e;</span><br><span class="line">    InitQueue(Q);</span><br><span class="line">    DisQ(Q);</span><br><span class="line">    EnQueue(Q,<span class="string">'A'</span>);</span><br><span class="line">    EnQueue(Q,<span class="string">'B'</span>);</span><br><span class="line">    EnQueue(Q,<span class="string">'C'</span>);</span><br><span class="line">    EnQueue(Q,<span class="string">'D'</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"长度="</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;lengt(Q);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"队列为="</span>;</span><br><span class="line">    DisQ(Q);</span><br><span class="line">    deleteQ(Q,e);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"长度="</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;lengt(Q);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"队列为="</span>;</span><br><span class="line">    DisQ(Q);</span><br><span class="line">    EnQueue(Q,<span class="string">'E'</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"长度="</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;lengt(Q);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"队列为="</span>;</span><br><span class="line">    DisQ(Q);</span><br><span class="line">    EnQueue(Q,<span class="string">'F'</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"队列为="</span>;</span><br><span class="line">    DisQ(Q);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/7队列.png" alt="7队列"></p><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> InfoType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> KeyType;            <span class="comment">//假定关键字类型为整数</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>                //结点类型</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    KeyType key;                <span class="comment">//关键字项</span></span><br><span class="line">    InfoType otherinfo;     <span class="comment">//其它数据域，InfoType视应用情况而定，下面不处理它</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span>   <span class="comment">//左右孩子指针</span></span><br><span class="line">&#125;BSTNode;</span><br><span class="line"><span class="keyword">typedef</span>  BSTNode  *BSTree;        <span class="comment">//BSTree是二叉排序树的类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在二叉排序树T上查找关键字为key的结点，成功时返回该结点位置，否则返回NULL</span></span><br><span class="line"><span class="function">BSTNode *<span class="title">findbst</span><span class="params">(BSTree t,KeyType key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="literal">NULL</span>||key==t-&gt;key)</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    <span class="keyword">if</span>(key&lt;t-&gt;key)</span><br><span class="line">        <span class="keyword">return</span> findbst(t-&gt;lchild,key);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> findbst(t-&gt;rchild,key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertBST</span><span class="params">(BSTree *T,<span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//插入一个值为key的节点到二叉排序树中</span></span><br><span class="line">    BSTNode *p,*q;</span><br><span class="line">    <span class="keyword">if</span>((*T)==<span class="literal">NULL</span>)</span><br><span class="line">    &#123; <span class="comment">//树为空树</span></span><br><span class="line">        (*T)=(BSTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BSTNode));</span><br><span class="line">        (*T)-&gt;key=key;</span><br><span class="line">        (*T)-&gt;lchild=(*T)-&gt;rchild=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        p=(*T);</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            q=p;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;key&gt;key)</span><br><span class="line">                p=q-&gt;lchild;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p-&gt;key&lt;key)</span><br><span class="line">                p=q-&gt;rchild;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"该二叉排序树中含有关键字为"</span>&lt;&lt;key&lt;&lt;<span class="string">"的节点!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        p=(BSTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BSTNode));</span><br><span class="line">        p-&gt;key=key;</span><br><span class="line">        p-&gt;lchild=p-&gt;rchild=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span>(q-&gt;key&gt;key)</span><br><span class="line">            q-&gt;lchild=p;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            q-&gt;rchild=p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BSTree <span class="title">CreateBST</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//输入一个结点序列，建立一棵二叉排序树，将根结点指针返回</span></span><br><span class="line">    BSTree T=<span class="literal">NULL</span>;    <span class="comment">//初始时T为空树</span></span><br><span class="line">    KeyType key;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;key;   <span class="comment">//读入一个关键字</span></span><br><span class="line">    <span class="keyword">while</span>(key)</span><br><span class="line">    &#123; <span class="comment">//假设key=0是输入结束标志</span></span><br><span class="line">        InsertBST(&amp;T,key);  <span class="comment">//将key插入二叉排序树T</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;key;  <span class="comment">//读入下一关键字</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> T;       <span class="comment">//返回建立的二叉排序树的根指针</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListBinTree</span><span class="params">(BSTree T)</span>   <span class="comment">//用广义表示二叉树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;T-&gt;key;</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;lchild!=<span class="literal">NULL</span>||T-&gt;rchild!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"("</span>;</span><br><span class="line">            ListBinTree(T-&gt;lchild);</span><br><span class="line">            <span class="keyword">if</span>(T-&gt;rchild!=<span class="literal">NULL</span>)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">","</span>;</span><br><span class="line">            ListBinTree(T-&gt;rchild);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">")"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">BSTNode *<span class="title">findbst</span><span class="params">(BSTree t,KeyType key)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InsertBST</span><span class="params">(BSTree *Tptr,KeyType key)</span></span>;</span><br><span class="line">    <span class="function">BSTree <span class="title">CreateBST</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ListBinTree</span><span class="params">(BSTree T)</span></span>;</span><br><span class="line">    BSTree T;</span><br><span class="line">    BSTNode *p;</span><br><span class="line">    <span class="keyword">int</span> key;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入关键字（输入0为结束标志）："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    T=CreateBST();</span><br><span class="line">    ListBinTree(T);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入欲查找关键字:"</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;key;</span><br><span class="line">    p=findbst(T,key);</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"没有找到"</span>&lt;&lt;key&lt;&lt;<span class="string">"！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"找到"</span>&lt;&lt;key&lt;&lt;<span class="string">"！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    ListBinTree(p);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/5树.png" alt="5树"></p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> KeyType;    <span class="comment">//定义关键字类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> InfoType[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>          //记录类型</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    KeyType key;        <span class="comment">//关键字项</span></span><br><span class="line">    InfoType data;      <span class="comment">//其他数据项,类型为InfoType</span></span><br><span class="line">&#125; RecType;              <span class="comment">//排序的记录类型定义</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(RecType R[],<span class="keyword">int</span> n)</span> <span class="comment">//对R[0..n-1]按递增有序进行直接插入排序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp=R[i];</span><br><span class="line">        j=i<span class="number">-1</span>;            <span class="comment">//从右向左在有序区R[0..i-1]中找R[i]的插入位置</span></span><br><span class="line">        <span class="keyword">while</span> (j&gt;=<span class="number">0</span> &amp;&amp; tmp.key&lt;R[j].key)</span><br><span class="line">        &#123;</span><br><span class="line">            R[j+<span class="number">1</span>]=R[j]; <span class="comment">//将关键字大于R[i].key的记录后移</span></span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        R[j+<span class="number">1</span>]=tmp;      <span class="comment">//在j+1处插入R[i]</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"i=%d: "</span>,i);</span><br><span class="line">        <span class="keyword">for</span> (k=<span class="number">0</span>; k&lt;n; k++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,R[k].key);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,n=<span class="number">5</span>;</span><br><span class="line">    RecType R[MaxSize];</span><br><span class="line">    KeyType a[]= &#123;<span class="number">3</span>,<span class="number">24</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        R[i].key=a[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"排序前:"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,R[i].key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    InsertSort(R,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"排序后:"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,R[i].key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/8冒泡.png" alt="8冒泡"></p><h2 id="题型分类"><a href="#题型分类" class="headerlink" title="题型分类"></a>题型分类</h2><blockquote><p>插入</p><p>删除</p><p>合并</p><p>排序</p><p>折半查找递归算法</p></blockquote><h2 id="顺序表题型"><a href="#顺序表题型" class="headerlink" title="顺序表题型"></a>顺序表题型</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listinsert_sq</span><span class="params">(sqlist &amp;l,<span class="keyword">int</span> i,et e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;l.length+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=l.length<span class="number">-1</span>; j&gt;=i<span class="number">-1</span>; j--) &#123;</span><br><span class="line">        l.elem[j+<span class="number">1</span>]=l.elem[j];</span><br><span class="line">    &#125;</span><br><span class="line">    l.elem[i<span class="number">-1</span>]=e;</span><br><span class="line">    ++l.length;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listdelete_sq</span><span class="params">(sqlist &amp;l,<span class="keyword">int</span> i,et &amp;e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;l.length)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    e=l.elem[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=i; j&lt;=l.length<span class="number">-1</span>; j++) &#123;</span><br><span class="line">        l.elem[j<span class="number">-1</span>]=l.elem[j];</span><br><span class="line">    &#125;</span><br><span class="line">    --l.length;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxsize 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> et;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    et *elem;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initlist_sq</span><span class="params">(sqlist &amp;l)</span></span>&#123;</span><br><span class="line">    l.elem=<span class="keyword">new</span> et[maxsize];</span><br><span class="line">    <span class="keyword">if</span>(!l.elem)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    l.length=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listinsert_sq</span><span class="params">(sqlist &amp;l,<span class="keyword">int</span> i,et e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;l.length+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=l.length<span class="number">-1</span>; j&gt;=i<span class="number">-1</span>; j--) &#123;</span><br><span class="line">        l.elem[j+<span class="number">1</span>]=l.elem[j];</span><br><span class="line">    &#125;</span><br><span class="line">    l.elem[i<span class="number">-1</span>]=e;</span><br><span class="line">    ++l.length;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listdelete_sq</span><span class="params">(sqlist &amp;l,<span class="keyword">int</span> i,et &amp;e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;l.length)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    e=l.elem[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=i; j&lt;=l.length<span class="number">-1</span>; j++) &#123;</span><br><span class="line">        l.elem[j<span class="number">-1</span>]=l.elem[j];</span><br><span class="line">    &#125;</span><br><span class="line">    --l.length;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disp_sq</span><span class="params">(sqlist l)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l.length==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"此顺序表为空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l.length;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;l.elem[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    et e;</span><br><span class="line">    sqlist l;</span><br><span class="line">    initlist_sq(l);</span><br><span class="line">    disp_sq(l);</span><br><span class="line">    listinsert_sq(l,<span class="number">1</span>,<span class="string">'A'</span>);</span><br><span class="line">    listinsert_sq(l,<span class="number">2</span>,<span class="string">'B'</span>);</span><br><span class="line">    listinsert_sq(l,<span class="number">3</span>,<span class="string">'C'</span>);</span><br><span class="line">    disp_sq(l);</span><br><span class="line">    listdelete_sq(l,<span class="number">1</span>,e);</span><br><span class="line">    disp_sq(l);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"删除的元素是："</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/1顺序.png" alt="1顺序"></p><h2 id="链表题型"><a href="#链表题型" class="headerlink" title="链表题型"></a>链表题型</h2><h3 id="插入-1"><a href="#插入-1" class="headerlink" title="插入"></a>插入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listinsert</span><span class="params">(lk &amp;l,<span class="keyword">int</span> i,et e)</span></span>&#123;</span><br><span class="line">    lk p;</span><br><span class="line">    p=l;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;j&lt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!p||j&gt;i<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lk s=<span class="keyword">new</span> ln;</span><br><span class="line">    s-&gt;date=e;<span class="comment">//将e的值赋值给s的值域</span></span><br><span class="line">    s-&gt;next=p-&gt;next;<span class="comment">//新元素s的指针域指向旧元素p的指针域</span></span><br><span class="line">    p-&gt;next=s;<span class="comment">//将p的指针域指向s元素</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listdelete</span><span class="params">(lk &amp;l,<span class="keyword">int</span> i,et &amp;e)</span></span>&#123;</span><br><span class="line">    lk p;</span><br><span class="line">    p=l;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next&amp;&amp;j&lt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!(p-&gt;next)||j&gt;i<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lk q;</span><br><span class="line">    q=p-&gt;next;<span class="comment">//q的指针指向p的指针域</span></span><br><span class="line">    p-&gt;next=q-&gt;next;<span class="comment">//p的指针域指向q的指针域</span></span><br><span class="line">    e=q-&gt;date;<span class="comment">//将删除q的值域的值赋值给e的位置值</span></span><br><span class="line">    <span class="keyword">delete</span> q;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求最大值"><a href="#求最大值" class="headerlink" title="求最大值"></a>求最大值</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mlist</span><span class="params">(lk l)</span></span>&#123;<span class="comment">//最大值</span></span><br><span class="line">    lk s=<span class="keyword">new</span> ln;</span><br><span class="line">    lk p=l-&gt;next;</span><br><span class="line">    s-&gt;data=p-&gt;data;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s-&gt;data&lt;=p-&gt;data)&#123;</span><br><span class="line">            s-&gt;data=p-&gt;data;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"最大值为："</span>&lt;&lt;s-&gt;data&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逆序输出"><a href="#逆序输出" class="headerlink" title="逆序输出"></a>逆序输出</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rlist</span><span class="params">(lk &amp;l)</span></span>&#123;<span class="comment">//逆序</span></span><br><span class="line">    lk p=l-&gt;next;</span><br><span class="line">    lk q;</span><br><span class="line">    l-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        q=p-&gt;next;</span><br><span class="line">        p-&gt;next=l-&gt;next;</span><br><span class="line">        l-&gt;next=p;</span><br><span class="line">        p=q;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergelist</span><span class="params">(lk &amp;la,lk &amp;lb,lk &amp;lc)</span></span>&#123;</span><br><span class="line">    lk pa=la-&gt;next;</span><br><span class="line">    lk pb=lb-&gt;next;</span><br><span class="line">    lk pc=lc=la;</span><br><span class="line">    <span class="keyword">while</span>(pa&amp;&amp;pb)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;data&lt;pb-&gt;data)&#123;</span><br><span class="line">            pc-&gt;next=pa;</span><br><span class="line">            pc=pa;</span><br><span class="line">            pa=pa-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            pc-&gt;next=pb;</span><br><span class="line">            pc=pb;</span><br><span class="line">            pb=pb-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pc-&gt;next=pa?pa:pb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(lk &amp;la)</span></span>&#123;</span><br><span class="line">    lk pa=la-&gt;next;<span class="comment">//将pa指针指向la表的头结点</span></span><br><span class="line">    lk ps=la;<span class="comment">//ps的初始值指向la的头结点</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>,k=<span class="number">0</span>;<span class="comment">//定义两个计数变量</span></span><br><span class="line">    ps-&gt;data=pa-&gt;data;<span class="comment">//给ps的数据域赋初值</span></span><br><span class="line">    <span class="keyword">while</span>(pa)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;data&gt;=ps-&gt;data)&#123;</span><br><span class="line">            ps-&gt;data=pa-&gt;data;<span class="comment">//将ps的数据域指向pa的数据域</span></span><br><span class="line">            pa=pa-&gt;next;<span class="comment">//向下移一位</span></span><br><span class="line">            k=i;<span class="comment">//满足条件用k记录</span></span><br><span class="line">            i++;<span class="comment">//循环计数+1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            pa=pa-&gt;next;</span><br><span class="line">            i++;<span class="comment">//循环计数+1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"最大元素是："</span>&lt;&lt;ps-&gt;data&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"位置是第"</span>&lt;&lt;k&lt;&lt;<span class="string">"个元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="折半查找"><a href="#折半查找" class="headerlink" title="折半查找"></a>折半查找</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">xfind</span><span class="params">(lk st,keyt t, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(low&lt;=high)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(st.elem[mid].key==t)</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (st.elem[mid].key&lt;t)</span><br><span class="line">            <span class="keyword">return</span> (xfind(st, t, mid+<span class="number">1</span>, high));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> (xfind(st, t, low, mid<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整程序-插入-删除-最大-合并-逆序"><a href="#完整程序-插入-删除-最大-合并-逆序" class="headerlink" title="完整程序(插入,删除,最大,合并,逆序)"></a>完整程序(插入,删除,最大,合并,逆序)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ln</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ln</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;*lk;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initlist</span><span class="params">(lk &amp;l)</span></span>&#123;</span><br><span class="line">    l=<span class="keyword">new</span> ln;</span><br><span class="line">    l-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insertlist</span><span class="params">(lk &amp;l,<span class="keyword">int</span> i,<span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line">    lk p=l;<span class="comment">//错写成p=l-&gt;next</span></span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;j&lt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p||j&gt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lk s=<span class="keyword">new</span> ln;</span><br><span class="line">    s-&gt;data=e;</span><br><span class="line">    s-&gt;next=p-&gt;next;</span><br><span class="line">    p-&gt;next=s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deletelist</span><span class="params">(lk &amp;l,<span class="keyword">int</span> i,<span class="keyword">int</span> &amp;e)</span></span>&#123;</span><br><span class="line">    lk p=l;<span class="comment">//错写成p=l-&gt;next</span></span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;j&lt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p||j&gt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lk q=p-&gt;next;</span><br><span class="line">    p-&gt;next=q-&gt;next;</span><br><span class="line">    e=q-&gt;data;</span><br><span class="line">    <span class="keyword">delete</span> q;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">margeinlist</span><span class="params">(lk &amp;la,lk &amp;lb,lk &amp;lc)</span></span>&#123;<span class="comment">//合并</span></span><br><span class="line">    lk pa=la-&gt;next;</span><br><span class="line">    lk pb=lb-&gt;next;</span><br><span class="line">    lk pc=lc=la;</span><br><span class="line">    <span class="keyword">while</span>(pa&amp;&amp;pb)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;data&lt;pb-&gt;data)&#123;</span><br><span class="line">            pc-&gt;next=pa;</span><br><span class="line">            pc=pa;</span><br><span class="line">            pa=pa-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            pc-&gt;next=pb;</span><br><span class="line">            pc=pb;</span><br><span class="line">            pb=pb-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pc-&gt;next=pa?pa:pb;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rlist</span><span class="params">(lk &amp;l)</span></span>&#123;<span class="comment">//逆序</span></span><br><span class="line">    lk p=l-&gt;next;</span><br><span class="line">    lk q;</span><br><span class="line">    l-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        q=p-&gt;next;</span><br><span class="line">        p-&gt;next=l-&gt;next;</span><br><span class="line">        l-&gt;next=p;</span><br><span class="line">        p=q;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mlist</span><span class="params">(lk l)</span></span>&#123;<span class="comment">//最大值</span></span><br><span class="line">    lk s=<span class="keyword">new</span> ln;</span><br><span class="line">    lk p=l-&gt;next;</span><br><span class="line">    s-&gt;data=p-&gt;data;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s-&gt;data&lt;=p-&gt;data)&#123;</span><br><span class="line">            s-&gt;data=p-&gt;data;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"最大值为："</span>&lt;&lt;s-&gt;data&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disp</span><span class="params">(lk &amp;l)</span></span>&#123;</span><br><span class="line">    lk p=l-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(!p)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"空表"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    lk la,lb,lc;</span><br><span class="line">    <span class="keyword">int</span> e;</span><br><span class="line">    initlist(la);</span><br><span class="line">    initlist(lb);</span><br><span class="line">    insertlist(la, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    insertlist(la, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    insertlist(la, <span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">    insertlist(la, <span class="number">4</span>, <span class="number">9</span>);</span><br><span class="line">    insertlist(lb, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    insertlist(lb, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    insertlist(lb, <span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"la的元素是："</span>;</span><br><span class="line">    disp(la);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"lb的元素是："</span>;</span><br><span class="line">    disp(lb);</span><br><span class="line">    deletelist(la, <span class="number">2</span>, e);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"删除的元素是："</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    margeinlist(la, lb, lc);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"合并后的元素是："</span>;</span><br><span class="line">    disp(lc);</span><br><span class="line">    rlist(lc);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"反序输出元素顺序为："</span>;</span><br><span class="line">    disp(lc);</span><br><span class="line">    mlist(lc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> et;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ln</span>&#123;</span></span><br><span class="line">    et date;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ln</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;ln,*lk;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initlist</span><span class="params">(lk &amp;l)</span></span>&#123;</span><br><span class="line">    l=<span class="keyword">new</span> ln;</span><br><span class="line">    l-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listinsert</span><span class="params">(lk &amp;l,<span class="keyword">int</span> i,et e)</span></span>&#123;</span><br><span class="line">    lk p;</span><br><span class="line">    p=l;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;j&lt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!p||j&gt;i<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lk s=<span class="keyword">new</span> ln;</span><br><span class="line">    s-&gt;date=e;<span class="comment">//将e的值赋值给s的值域</span></span><br><span class="line">    s-&gt;next=p-&gt;next;<span class="comment">//新元素s的指针域指向旧元素p的指针域</span></span><br><span class="line">    p-&gt;next=s;<span class="comment">//将p的指针域指向s元素</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listdelete</span><span class="params">(lk &amp;l,<span class="keyword">int</span> i,et &amp;e)</span></span>&#123;</span><br><span class="line">    lk p;</span><br><span class="line">    p=l;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next&amp;&amp;j&lt;i<span class="number">-1</span>)&#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!(p-&gt;next)||j&gt;i<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lk q;</span><br><span class="line">    q=p-&gt;next;<span class="comment">//q的指针指向p的指针域</span></span><br><span class="line">    p-&gt;next=q-&gt;next;<span class="comment">//p的指针域指向q的指针域</span></span><br><span class="line">    e=q-&gt;date;<span class="comment">//将删除q的值域的值赋值给e的位置值</span></span><br><span class="line">    <span class="keyword">delete</span> q;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disp</span><span class="params">(lk l)</span></span>&#123;</span><br><span class="line">    lk p=l-&gt;next;</span><br><span class="line">    <span class="keyword">if</span> (!p) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"此链表为空"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;date;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    lk l;</span><br><span class="line">    et e;</span><br><span class="line">    initlist(l);</span><br><span class="line">    disp(l);</span><br><span class="line">    listinsert(l, <span class="number">1</span>, <span class="string">'A'</span>);</span><br><span class="line">    listinsert(l, <span class="number">2</span>, <span class="string">'B'</span>);</span><br><span class="line">    listinsert(l, <span class="number">3</span>, <span class="string">'C'</span>);</span><br><span class="line">    disp(l);</span><br><span class="line">    listdelete(l, <span class="number">2</span>, e);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"删除的元素是："</span>&lt;&lt;e&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    disp(l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/2链表.png" alt="2链表"></p><h3 id="完整代码-查找"><a href="#完整代码-查找" class="headerlink" title="完整代码(查找)"></a>完整代码(查找)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ln</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ln</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;*lk;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inilist</span><span class="params">(lk &amp;l)</span></span>&#123;</span><br><span class="line">    l=<span class="keyword">new</span> ln;</span><br><span class="line">    l-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listinsert</span><span class="params">(lk &amp;l,<span class="keyword">int</span> i,<span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line">    lk p=l;<span class="comment">//定义一个指针p指向l的头结点</span></span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;<span class="comment">//位置的初始值</span></span><br><span class="line">    <span class="keyword">while</span> (p&amp;&amp;j&lt;i<span class="number">-1</span>) &#123;</span><br><span class="line">        p=p-&gt;next;<span class="comment">//当满足条件是p指向下一位</span></span><br><span class="line">        j++;<span class="comment">//位置值加一</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!p||j&gt;i<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lk s=<span class="keyword">new</span> ln;<span class="comment">//建立一个节点s</span></span><br><span class="line">    s-&gt;data=e;<span class="comment">//s节点的数据域等于e的数值</span></span><br><span class="line">    s-&gt;next=p-&gt;next;<span class="comment">//s的next域指向p的next域</span></span><br><span class="line">    p-&gt;next=s;<span class="comment">//p的next域指向s节点</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(lk &amp;la)</span></span>&#123;</span><br><span class="line">    lk pa=la-&gt;next;<span class="comment">//将pa指针指向la表的头结点</span></span><br><span class="line">    lk ps=la;<span class="comment">//ps的初始值指向la的头结点</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>,k=<span class="number">0</span>;<span class="comment">//定义两个计数变量</span></span><br><span class="line">    ps-&gt;data=pa-&gt;data;<span class="comment">//给ps的数据域赋初值</span></span><br><span class="line">    <span class="keyword">while</span>(pa)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;data&gt;=ps-&gt;data)&#123;</span><br><span class="line">            ps-&gt;data=pa-&gt;data;<span class="comment">//将ps的数据域指向pa的数据域</span></span><br><span class="line">            pa=pa-&gt;next;<span class="comment">//向下移一位</span></span><br><span class="line">            k=i;<span class="comment">//满足条件用k记录</span></span><br><span class="line">            i++;<span class="comment">//循环计数+1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            pa=pa-&gt;next;</span><br><span class="line">            i++;<span class="comment">//循环计数+1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"最大元素是："</span>&lt;&lt;ps-&gt;data&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"位置是第"</span>&lt;&lt;k&lt;&lt;<span class="string">"个元素"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    lk la;<span class="comment">//定义三个表</span></span><br><span class="line">    inilist(la);<span class="comment">//对表la的初始化</span></span><br><span class="line">    listinsert(la, <span class="number">1</span>, <span class="number">2</span>);<span class="comment">//向la表中插入数据</span></span><br><span class="line">    listinsert(la, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    listinsert(la, <span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">    listinsert(la, <span class="number">4</span>, <span class="number">7</span>);</span><br><span class="line">    listinsert(la, <span class="number">5</span>, <span class="number">10</span>);</span><br><span class="line">    listinsert(la, <span class="number">6</span>, <span class="number">9</span>);</span><br><span class="line">    listinsert(la, <span class="number">7</span>, <span class="number">8</span>);</span><br><span class="line">    max(la);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/3查找.png" alt="3查找"></p><h3 id="完整代码-折半查找"><a href="#完整代码-折半查找" class="headerlink" title="完整代码(折半查找)"></a>完整代码(折半查找)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  实验六数据结构</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by PC-MAC on 2018/12/3.</span></span><br><span class="line"><span class="comment">//  Copyright © 2018 PC-MAC. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> tmax=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> keyt;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    keyt key;</span><br><span class="line">&#125;elemtype;<span class="comment">//每行内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    elemtype *elem;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;lk;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(lk st,keyt key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    st.elem[<span class="number">0</span>].key=key;</span><br><span class="line">    <span class="keyword">for</span>(i=st.length;st.elem[i].key!=key;i--);</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">twofind</span><span class="params">(lk st,keyt key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low,high,mid;</span><br><span class="line">    low=<span class="number">1</span>;</span><br><span class="line">    high=st.length;</span><br><span class="line">    <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">        mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(st.elem[mid].key==key)</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(st.elem[mid].key&gt;key)</span><br><span class="line">            high=mid<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            low=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">xfind</span><span class="params">(lk st,keyt t, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(low&lt;=high)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(st.elem[mid].key==t)</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (st.elem[mid].key&lt;t)</span><br><span class="line">            <span class="keyword">return</span> (xfind(st, t, mid+<span class="number">1</span>, high));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> (xfind(st, t, low, mid<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    keyt a[]=&#123;<span class="number">0</span>,<span class="number">13</span>,<span class="number">24</span>,<span class="number">35</span>,<span class="number">32</span>,<span class="number">65</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">74</span>,<span class="number">20</span>,<span class="number">38</span>&#125;;</span><br><span class="line">    lk t;</span><br><span class="line">    t.elem=<span class="keyword">new</span> elemtype[tmax];</span><br><span class="line">    t.length=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        t.elem[i].key=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"查找到的元素位置为："</span>&lt;&lt;find(t, <span class="number">35</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    lk s;</span><br><span class="line">    s.elem=<span class="keyword">new</span> elemtype[tmax];</span><br><span class="line">    s.length=<span class="number">10</span>;</span><br><span class="line">    keyt b[]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">14</span>,<span class="number">16</span>,<span class="number">18</span>,<span class="number">20</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">10</span>;k++)&#123;</span><br><span class="line">        s.elem[k].key=b[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"折半查找到的元素位置为："</span>&lt;&lt;twofind(s, <span class="number">14</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    keyt arr[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i] = i * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"输入查找数字:"</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; j;</span><br><span class="line">    lk P;</span><br><span class="line">    P.elem = <span class="keyword">new</span> elemtype;</span><br><span class="line">    P.length = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">10</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        P.elem[j].key = arr[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"递归折半查找到的元素位置为："</span>&lt;&lt;xfind(P, j, <span class="number">0</span>, <span class="number">10</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/10/数据结构期末总结/4折半.png" alt="4折半"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/02/10/数据结构期末总结/0.png&quot; alt=&quot;0&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;数据结构重点分析及期末总结&quot;&gt;&lt;a href=&quot;#数据结构重点分析及期末总结&quot; class=&quot;headerlink&quot; title=&quot;数据结构重点分析及期末总
      
    
    </summary>
    
      <category term="数据结构" scheme="https://blog.orghub.cn/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://blog.orghub.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="总结" scheme="https://blog.orghub.cn/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="经验" scheme="https://blog.orghub.cn/tags/%E7%BB%8F%E9%AA%8C/"/>
    
      <category term="期末" scheme="https://blog.orghub.cn/tags/%E6%9C%9F%E6%9C%AB/"/>
    
  </entry>
  
  <entry>
    <title>更换域名方法</title>
    <link href="https://blog.orghub.cn/2019/02/09/%E6%9B%B4%E6%8D%A2%E5%9F%9F%E5%90%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.orghub.cn/2019/02/09/更换域名方法/</id>
    <published>2019-02-09T05:18:09.000Z</published>
    <updated>2019-02-09T05:40:09.698Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Blog更换域名教程"><a href="#Blog更换域名教程" class="headerlink" title="Blog更换域名教程"></a>Blog更换域名教程</h2><h3 id="更换流程"><a href="#更换流程" class="headerlink" title="更换流程"></a>更换流程</h3><blockquote><p>1.更改域名解析；</p><p>2.更改站点配置文件URL；</p><p>3.改变CNAM中的域名；</p><p>4.改变robots.txt中，Sitemap字段；</p><p>5.查看Github中域名绑定是否更改；</p><p>6.对Google爬虫进行站点验证及添加；</p></blockquote><h3 id="更换域名解析"><a href="#更换域名解析" class="headerlink" title="更换域名解析"></a>更换域名解析</h3><p>在自己的域名控制台中导出自己之前绑定改过的域名，并在新的域名解析中添加。</p><h3 id="更改站点配置文件URL"><a href="#更改站点配置文件URL" class="headerlink" title="更改站点配置文件URL"></a>更改站点配置文件URL</h3><p>进入站点配置文件，更改字段：<code>url: https://xxx.com</code></p><h3 id="改变CNAM中的域名"><a href="#改变CNAM中的域名" class="headerlink" title="改变CNAM中的域名"></a>改变CNAM中的域名</h3><p>打开你的blog目录，<code>source/CNAME</code>，直接添加即可。</p><ul><li>CNAME会直接关联Github的域名绑定</li></ul><h3 id="改变robots"><a href="#改变robots" class="headerlink" title="改变robots"></a>改变robots</h3><p>打开你的blog目录，<code>source/robots.txt</code>中，改变Sitemap字段添加你的域名地址。</p><ul><li>为了给爬虫robots做引导</li></ul><h3 id="在Github中域名绑定"><a href="#在Github中域名绑定" class="headerlink" title="在Github中域名绑定"></a>在Github中域名绑定</h3><p>查看Github中域名绑定是否更改，具体位置在你的库文件下的域名绑定模块。</p><h3 id="对Google爬虫进行站点验证及添加"><a href="#对Google爬虫进行站点验证及添加" class="headerlink" title="对Google爬虫进行站点验证及添加"></a>对Google爬虫进行站点验证及添加</h3><p>点击地址自行添加：<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="noopener">https://www.google.com/webmasters/tools/home?hl=zh-CN</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Blog更换域名教程&quot;&gt;&lt;a href=&quot;#Blog更换域名教程&quot; class=&quot;headerlink&quot; title=&quot;Blog更换域名教程&quot;&gt;&lt;/a&gt;Blog更换域名教程&lt;/h2&gt;&lt;h3 id=&quot;更换流程&quot;&gt;&lt;a href=&quot;#更换流程&quot; class=&quot;head
      
    
    </summary>
    
      <category term="域名" scheme="https://blog.orghub.cn/categories/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="教程" scheme="https://blog.orghub.cn/categories/%E5%9F%9F%E5%90%8D/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="域名" scheme="https://blog.orghub.cn/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="教程" scheme="https://blog.orghub.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>小米Pro15.6 安装黑苹果兼MacOS Mojave安装教程</title>
    <link href="https://blog.orghub.cn/2019/02/03/%E5%B0%8F%E7%B1%B3PRO%E5%AE%89%E8%A3%85%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    <id>https://blog.orghub.cn/2019/02/03/小米PRO安装黑苹果/</id>
    <published>2019-02-03T02:50:09.000Z</published>
    <updated>2019-02-03T10:45:47.068Z</updated>
    
    <content type="html"><![CDATA[<h2 id="小米Pro15-6-安装黑苹果兼MacOS-Mojave安装教程"><a href="#小米Pro15-6-安装黑苹果兼MacOS-Mojave安装教程" class="headerlink" title="小米Pro15.6 安装黑苹果兼MacOS Mojave安装教程"></a>小米Pro15.6 安装黑苹果兼MacOS Mojave安装教程</h2><h3 id="写作-安装流程"><a href="#写作-安装流程" class="headerlink" title="写作/安装流程"></a>写作/安装流程</h3><blockquote><p>1.下载镜像；</p><p>2.刻盘；</p><p>3.安装；</p><p>4.替换/完善EFI；</p></blockquote><h2 id="Windows下制作macOS-Mojave安装盘"><a href="#Windows下制作macOS-Mojave安装盘" class="headerlink" title="Windows下制作macOS Mojave安装盘"></a>Windows下制作macOS Mojave安装盘</h2><h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><blockquote><p>U盘大于8G</p><p>U 盘大小不限做 PE 盘</p><p>系统镜像下载：文章结尾</p><p><a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">etcher</a></p></blockquote><h3 id="制作安装镜像"><a href="#制作安装镜像" class="headerlink" title="制作安装镜像"></a>制作安装镜像</h3><blockquote><p>镜像制作</p><p>下载<a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">etcher</a></p><p>打开镜像</p><p>选择U盘</p><p>点击Flash即可</p></blockquote><h3 id="小米BIOS设置"><a href="#小米BIOS设置" class="headerlink" title="小米BIOS设置"></a>小米BIOS设置</h3><p>开机按<code>F2</code>进入BIOS设置</p><ul><li><p>Security（1）</p><ul><li>选择<code>Set Supervisor Password</code>，在<code>Enter New Password</code>这里输入密码，然后在<code>Enter New Password Again</code>这里重复输入密码，这一步是设置进入BIOS的密码。</li></ul><p><img src="/2019/02/03/小米PRO安装黑苹果/设置BIOS1.png" alt="设置BIOS1"></p></li><li><p>Security（2）</p><ul><li>再次进BIOS，依然在Security分类里选择<code>Secure Boot Mode</code>选项，将其设置为<code>Disable</code>，关闭安全模式。最后按<code>F10</code>，对你的刚才的设置进行保存并退出。</li></ul><p><img src="/2019/02/03/小米PRO安装黑苹果/设置BIOS2.png" alt="设置BIOS2"></p></li></ul><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>开机，按<code>F12</code>选择U盘引导</p><p>进入CLOVER主界面，直接回车，开始引导mac OS</p><p><img src="/2019/02/03/小米PRO安装黑苹果/0.png" alt="0"></p><p>很多的机友都是会在这个地方翻车。出现问题请私聊我反馈，请提供翻车照片及机器配置图。<strong>不提供任何信息直接发问就是耍流氓</strong></p><p>这个过程需要1-2分钟,耐心等待，进入安装程序,出现语言选择界面</p><p><img src="/2019/02/03/小米PRO安装黑苹果/1.png" alt="1"></p><p>选择简体中文，点击继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/4.png" alt="4"></p><p>出现安装向导，点击继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/5.png" alt="5"></p><p>阅读许可协议，点击继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/6.png" alt="6"></p><p>点击同意，继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/7.png" alt="7"></p><p>出现安装界面，这里是让你选择安装磁盘</p><p><img src="/2019/02/03/小米PRO安装黑苹果/8.png" alt="8"></p><p>请点击菜单上面的实用工具-&gt;磁盘工具</p><p><img src="/2019/02/03/小米PRO安装黑苹果/9.png" alt="9"></p><p>出现磁盘工具，<strong><em>在磁盘工具里面所做的操作涉及到你的数据安全，请认真仔细确认后再操作，否则由此造成的一切后果本站概不承担。</em></strong></p><p><img src="/2019/02/03/小米PRO安装黑苹果/10.png" alt="10"></p><p>点击窗口左上角的<code>显示</code>，选择<code>显示所有设备</code></p><p><img src="/2019/02/03/小米PRO安装黑苹果/11.png" alt="11"></p><p>选择<code>APPLE SSD macOS-0 SSD Media</code><strong><em>本例中为虚拟机中的磁盘名称，请根据你的设备选择相应的磁盘</em></strong></p><p><img src="/2019/02/03/小米PRO安装黑苹果/12.png" alt="12"></p><p>点击<code>抹掉</code>， <strong><em>假设您的磁盘是空的或者数据是已经备份过的,别怪我没提醒你!!!</em></strong></p><p><img src="/2019/02/03/小米PRO安装黑苹果/13.png" alt="13"></p><p>在弹出的窗口中输入：名称：<code>Mac</code>；格式：<code>Mac OS扩展(日志式)（10.13.X以上版本）APFS（10.14.X以上版本）</code>；方案：<code>GUID分区图</code>，<strong><em>在点击抹掉按钮之前，请再次确认你的磁盘已经提前做了数据备份</em></strong></p><p><img src="/2019/02/03/小米PRO安装黑苹果/14.png" alt="14"></p><p>点击<code>抹除</code>，然后等待操作结束</p><p><img src="/2019/02/03/小米PRO安装黑苹果/15.png" alt="15"></p><p>点击完成，通过菜单选择<code>退出磁盘工具</code>或者按窗口左上角红色按钮离开磁盘工具</p><p><img src="/2019/02/03/小米PRO安装黑苹果/16.png" alt="16"></p><p>返回到安装界面</p><p><img src="/2019/02/03/小米PRO安装黑苹果/17.png" alt="17"></p><p>选择<code>Mac</code>磁盘，点击继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/18.png" alt="18"></p><p>它会把USB安装盘上的安装文件预复制到要安装的系统分区里，这个过程通常会持续1-2分钟</p><p><img src="/2019/02/03/小米PRO安装黑苹果/21.png" alt="21"></p><p>重启后继续安装，在安装期间，通常会自动重启2-3遍</p><p><img src="/2019/02/03/小米PRO安装黑苹果/19.png" alt="19"></p><p>之所以有重启的动作是因为从Mac OS 10.13.x开始，苹果公司将默认的HFS磁盘分区强行换成APFS分区，它会在第二次重启之后做HFS-&gt;APFS转换的动作，转换成功后，继续安装过程。</p><h3 id="重启重点"><a href="#重启重点" class="headerlink" title="重启重点"></a>重启重点</h3><p>第一次重启事实上Mac OS，已经完成的解压到了硬盘上，就跟Windows中拷贝U盘文件道理是一样的。</p><p>所以无论是第几次重启，哪怕是第一次，也可以直接进入Windows系统继续如下操作，因为这个时候Mac的基本配置文佳已经拷贝完成了。</p><h2 id="合并或粘贴EFI脱离USB运行"><a href="#合并或粘贴EFI脱离USB运行" class="headerlink" title="合并或粘贴EFI脱离USB运行"></a>合并或粘贴EFI脱离USB运行</h2><h2 id="Windows篇单硬盘版"><a href="#Windows篇单硬盘版" class="headerlink" title="[Windows篇单硬盘版]"></a>[Windows篇单硬盘版]</h2><p>基于最新版本的MacOS是不继承任何EFI 的，也就是说除了集成Clover，没有任何驱动的配置，所以若U盘中不替换EFI是无法正常启动桌面的，尽管配置成功，开机跑代码也会提示。所以这个时候就要借着重启的机会，提前合并粘贴EFI文件。</p><p><img src="/2019/02/03/小米PRO安装黑苹果/36.png" alt="36"></p><h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><p>正常开机进入Windows桌面，打开DG（DiskGenius分区工具）找到<code>ESP</code>分区，点击右侧的<code>浏览文件</code></p><p><img src="/2019/02/03/小米PRO安装黑苹果/37.jpg" alt="37"></p><h3 id="合并EFI"><a href="#合并EFI" class="headerlink" title="合并EFI"></a>合并EFI</h3><p>打开<code>ESP</code>文件夹（这里要注意的是，现在有的文件夹，都是Windows的，一定不要直接删除，否则Win系统无法开机）</p><p><img src="/2019/02/03/小米PRO安装黑苹果/38.jpg" alt="38"></p><p>再次强调，若之前安装过Win系统，想要做双系统的朋友，只需要拷贝<code>EFI文件中的CLOVER</code>文件夹即可！剩下的都不需要动。用快捷键粘贴进去。</p><p><img src="/2019/02/03/小米PRO安装黑苹果/39.png" alt="39"></p><p>粘贴以后的样子，可能会多出一个APPLE文件夹，不需要搭理。</p><p><img src="/2019/02/03/小米PRO安装黑苹果/40.png" alt="40"></p><h2 id="Windows篇双硬盘版"><a href="#Windows篇双硬盘版" class="headerlink" title="[Windows篇双硬盘版]"></a>[Windows篇双硬盘版]</h2><h3 id="重启电脑-1"><a href="#重启电脑-1" class="headerlink" title="重启电脑"></a>重启电脑</h3><p>正常开机进入Windows桌面，打开DG（DiskGenius分区工具）找到<code>ESP</code>分区，点击右侧的<code>浏览文件</code></p><p>这里我就不放图了，原理与单硬盘版相同，只不过是找到你安装<code>Mac OS</code>的那个硬盘</p><h3 id="粘贴EFI"><a href="#粘贴EFI" class="headerlink" title="粘贴EFI"></a>粘贴EFI</h3><p>直接将EFI文件夹里面的所有文件复制到<code>ESP分区</code>,这里给大家看一下我的，直接带着<code>EFI</code>粘贴进去就可以了里面的都不要管</p><p><img src="/2019/02/03/小米PRO安装黑苹果/43.png" alt="43"></p><h2 id="添加启动项到BIOS"><a href="#添加启动项到BIOS" class="headerlink" title="添加启动项到BIOS"></a>添加启动项到BIOS</h2><h2 id="Windows篇单硬盘版-1"><a href="#Windows篇单硬盘版-1" class="headerlink" title="[Windows篇单硬盘版]"></a>[Windows篇单硬盘版]</h2><p>打开<code>BOOTICE</code>，看图操作，图上有序号</p><h3 id="添加盘符"><a href="#添加盘符" class="headerlink" title="添加盘符"></a>添加盘符</h3><p><img src="/2019/02/03/小米PRO安装黑苹果/41.jpg" alt="41"></p><h3 id="设置启动项"><a href="#设置启动项" class="headerlink" title="设置启动项"></a>设置启动项</h3><p>添加盘符以后，添加启动项，并且改变启动项的顺序，若开机为<code>Clover启动</code>，请调执第一位。</p><p><img src="/2019/02/03/小米PRO安装黑苹果/42.jpg" alt="42"></p><h2 id="Windows篇双硬盘版-1"><a href="#Windows篇双硬盘版-1" class="headerlink" title="[Windows篇双硬盘版]"></a>[Windows篇双硬盘版]</h2><h3 id="开机进BIOS"><a href="#开机进BIOS" class="headerlink" title="开机进BIOS"></a>开机进BIOS</h3><p>设置启动项顺序，一般主板应该是<code>boot</code>选项卡中调节，调第一启动项为你的<code>Mac OS</code>分区。</p><p>继续执行Mac OS 的重启</p><h2 id="重启重点-1"><a href="#重启重点-1" class="headerlink" title="重启重点"></a>重启重点</h2><p>这时候你可以拔掉U盘扔掉了。</p><p>本次重启是继续之前未完成的重启，进入你的<code>Mac OS的安装的硬盘</code>（这里Mac OS 的安装硬盘因为拔掉了U盘并且替换好EFI应该就只有一个了），继续安装系统时的重启过程</p><h2 id="第二阶段重启"><a href="#第二阶段重启" class="headerlink" title="第二阶段重启"></a>第二阶段重启</h2><p>第二阶段的安装会有两种界面,一种是不进安装界面直接安装,另一种是先进入安装界面直接安装,需要注意的是,无论是哪一种界面下,安装的过程中全程是禁用鼠标和键盘的,需要你做的只是耐心等待它安装完成</p><p><img src="/2019/02/03/小米PRO安装黑苹果/21-1.png" alt="21-1"></p><h3 id="设置向导"><a href="#设置向导" class="headerlink" title="设置向导"></a>设置向导</h3><p>选择国家：中国</p><p><img src="/2019/02/03/小米PRO安装黑苹果/22.png" alt="22"></p><p>设置键盘</p><p><img src="/2019/02/03/小米PRO安装黑苹果/23.png" alt="23"></p><p>你可以添加自己熟悉的输入法，然后点击继续，出现数据与隐私，阅读后点击继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/24.png" alt="24"></p><p>选择不传输任何信息，点击继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/25.png" alt="25"></p><p>点击稍后设置</p><p><img src="/2019/02/03/小米PRO安装黑苹果/26.png" alt="26"></p><p>出现<code>您确定要中法使用Apple ID来登录吗？</code>，点击跳过</p><p><img src="/2019/02/03/小米PRO安装黑苹果/27.png" alt="27"></p><p>出现条款与条件，点击同意</p><p><img src="/2019/02/03/小米PRO安装黑苹果/28.png" alt="28"></p><p>出现<code>我已经阅读并同意&quot;macOS软件许可协议&quot;</code>，点击同意</p><p><img src="/2019/02/03/小米PRO安装黑苹果/29.png" alt="29"></p><p>出现<code>创建电脑用户</code>的窗口,输入用户名和密码,点击<code>继续</code></p><h3 id="创建电脑用户"><a href="#创建电脑用户" class="headerlink" title="创建电脑用户"></a>创建电脑用户</h3><p>用户自己编辑</p><p>系统会创建初始用户，接着进行快捷设置</p><p><img src="/2019/02/03/小米PRO安装黑苹果/31.png" alt="31"></p><p>弹出界面，让你选择外观，您可以根据个人的喜好选择浅色主题或者深色主题，点击继续</p><p><img src="/2019/02/03/小米PRO安装黑苹果/32.png" alt="32"></p><p><img src="/2019/02/03/小米PRO安装黑苹果/33.png" alt="33"></p><p>出现<code>正在设置您的Mac</code>,请稍候完成设置向导</p><p><img src="/2019/02/03/小米PRO安装黑苹果/34.png" alt="34"></p><p>设置向导完成，根据选择主题的不同，分别进入不同的界面</p><h3 id="进入桌面"><a href="#进入桌面" class="headerlink" title="进入桌面"></a>进入桌面</h3><p><img src="/2019/02/03/小米PRO安装黑苹果/35.png" alt="35"></p><p>出现桌面后,整个的安装向导就完成了。</p><h2 id="安装后的系统设置"><a href="#安装后的系统设置" class="headerlink" title="安装后的系统设置"></a>安装后的系统设置</h2><p>如果没有什么问题，看到开机页面了，那么聪明的你说明你的黑苹果系统已经安装成功了。</p><h3 id="快捷键的小修改"><a href="#快捷键的小修改" class="headerlink" title="快捷键的小修改"></a>快捷键的小修改</h3><p>很多人习惯了Windows，所以这里的快捷键做一下调整，如下修改就可以了</p><p><img src="/2019/02/03/小米PRO安装黑苹果/44.png" alt="44"></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p>MacOS：链接: <a href="https://pan.baidu.com/s/1z96tO0D0cZu0EU5McNG09A" target="_blank" rel="noopener">https://pan.baidu.com/s/1z96tO0D0cZu0EU5McNG09A</a> 提取码: iusp </p><p>12.28EFI：链接: <a href="https://pan.baidu.com/s/1t2dHHV0uFYRSVe-IA4wRBQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1t2dHHV0uFYRSVe-IA4wRBQ</a> 提取码: n4ff </p><h2 id="鸣谢与支持"><a href="#鸣谢与支持" class="headerlink" title="鸣谢与支持"></a>鸣谢与支持</h2><p>Mac OS、EFI文件及部分文章图片转载于<a href="https://blog.daliansky.net/" target="_blank" rel="noopener"><strong>黑果小兵的部落阁</strong></a></p><p>文章如又不懂的地方，可以添加我的微信，或者QQ，<code>952339610</code>，即可在线咨询！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;小米Pro15-6-安装黑苹果兼MacOS-Mojave安装教程&quot;&gt;&lt;a href=&quot;#小米Pro15-6-安装黑苹果兼MacOS-Mojave安装教程&quot; class=&quot;headerlink&quot; title=&quot;小米Pro15.6 安装黑苹果兼MacOS Mojave
      
    
    </summary>
    
      <category term="黑苹果" scheme="https://blog.orghub.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="教程" scheme="https://blog.orghub.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://blog.orghub.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="黑苹果" scheme="https://blog.orghub.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="小米" scheme="https://blog.orghub.cn/tags/%E5%B0%8F%E7%B1%B3/"/>
    
  </entry>
  
  <entry>
    <title>GitHub-Hexo-搭建个人网站详细教程</title>
    <link href="https://blog.orghub.cn/2019/01/29/GitHub-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>https://blog.orghub.cn/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/</id>
    <published>2019-01-29T04:52:17.000Z</published>
    <updated>2019-02-02T01:15:06.808Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/v2-d4c1239e75c02e8482c22017a6c8d407_1200x500.jpg" alt="v2-d4c1239e75c02e8482c22017a6c8d407_1200x500"></p><h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo ?"></a>什么是Hexo ?</h2><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/v2-6890485c84748900d9dae824b7f7cbb1_hd.jpg" alt="v2-6890485c84748900d9dae824b7f7cbb1_hd"></p><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我们选用的是GitHub，你没看错，全球最大的同性恋交友网站（逃……）。Hexo同时也是GitHub上的开源项目，参见：<a href="http://link.zhihu.com/?target=https%3A//github.com/hexojs/hexo" target="_blank" rel="noopener">hexojs/hexo</a> 如果想要更加全面的了解Hexo，可以到其官网 <a href="http://link.zhihu.com/?target=https%3A//hexo.io/" target="_blank" rel="noopener">Hexo</a> 了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。这里，默认各位猿/媛儿都知道GitHub就不再赘述。</p><p><strong>这是我的个人博客效果:</strong> <a href="www.blog.govane.top">TheMrxk· Blog</a></p><p>下面正式从零开始搭建年轻人的第一个网站。</p><h2 id="搭建步骤："><a href="#搭建步骤：" class="headerlink" title="搭建步骤："></a><strong>搭建步骤：</strong></h2><ul><li>获得个人网站域名</li><li>GitHub创建个人仓库</li><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>推送网站</li><li>绑定域名</li><li>常用的Hexo 命令</li><li>更换主题</li><li>个性化设置</li><li>添加播放器</li><li>发布文章</li></ul><h3 id="获得个人网站域名"><a href="#获得个人网站域名" class="headerlink" title="获得个人网站域名"></a>获得个人网站域名</h3><p>域名是网站的入口，也是网站的第一印象，比如饿了么的官网的域名是：<a href="http://link.zhihu.com/?target=https%3A//www.ele.me/" target="_blank" rel="noopener">https://www.ele.me/</a> ，很是巧妙。常见的有com,cn,net,org等后缀，也有小众的xyz,me,io等后缀，根据你自己的喜好，选择不同的后缀，比如我选择就是常见的com后缀。很多小众奇特的后缀在大陆是没办法备案的，网站也就无法上线。然而使用GitHub托管我们的网站，完全不需要备案，因为托管我们的网站内容的服务器在美国，而且在国内备案流程也比较繁杂，时间需要一周左右。</p><p>申请域名的地方有很多，这里推荐阿里云：<a href="http://link.zhihu.com/?target=https%3A//www.aliyun.com/" target="_blank" rel="noopener">阿里云-为了无法计算的价值</a> 申请入口：<a href="http://link.zhihu.com/?target=https%3A//wanwang.aliyun.com/domain/" target="_blank" rel="noopener">域名注册</a> 购买域名这也是我们整个搭建过程中惟一一个需要花钱的地方。如果你已经有了空闲域名就无需购买，直接使用即可。</p><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：<a href="http://link.zhihu.com/?target=https%3A//github.com/" target="_blank" rel="noopener">Build software better, together</a> 点击GitHub中的New repository创建新仓库，仓库名应该为：<strong>用户名</strong>.<a href="http://link.zhihu.com/?target=http%3A//github.io" target="_blank" rel="noopener">http://github.io</a> 这个<strong>用户名</strong>使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/WX20190128-121920.png" alt="WX20190128-121920"></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。从Git官网下载：<a href="http://link.zhihu.com/?target=https%3A//git-scm.com/download/win" target="_blank" rel="noopener">Git - Downloading Package</a> 现在的机子基本都是64位的，选择64位的安装包，下载后安装。</p><p>在命令行里输入git测试是否安装成功。</p><p>首先查看电脑是否安装的Git，终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git</span><br></pre></td></tr></table></figure><p>安装过则会输出：即表示成功安装</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/查考GIT安装.png" alt="查考GIT安装"></p><p>若安装失败，参看其他详细的Git安装教程。</p><p>Mac终端为例直接输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><p>安装成功后，将你的Git与GitHub帐号绑定，</p><h3 id="创建ssh-key，配置git"><a href="#创建ssh-key，配置git" class="headerlink" title="创建ssh key，配置git"></a>创建ssh key，配置git</h3><p><strong>1，设置用户名和电子邮件（Github上每次提交都会记录他们）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub邮箱&quot;</span><br></pre></td></tr></table></figure><p><strong>2，通过终端命令创建ssh密钥</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub邮箱&quot;</span><br></pre></td></tr></table></figure><p><a href="mailto:`952339610@qq.com" target="_blank" rel="noopener">`952339610@qq.com</a>`是我的邮件名，回车会有以下输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Last login: Sat Jan  6 14:12:16 on ttys000</span><br><span class="line">WMBdeMacBook-Pro:~ *******$ ssh-keygen -t rsa -C <span class="string">"952339610@qq.com"</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/*******/.ssh/id_rsa): </span><br><span class="line">/Users/*******/.ssh/id_rsa already exists.</span><br><span class="line">Overwrite (y/n)? n</span><br><span class="line">WMBdeMacBook-Pro:~ *******$</span><br></pre></td></tr></table></figure><p>由于这里我原来已经创建过，这里我选<strong>n</strong>，没有创建过的，会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在<strong>〜/</strong>下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的关键。<br> 终端查看<code>.ssh/id_rsa.pub</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open .ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>回车后，就会新弹出一个终端，然后复制里面的关键字段。</p><p><strong>3，打开<a href="http://link.zhihu.com/?target=https%3A//github.com/settings/keys" target="_blank" rel="noopener">GitHub_Settings_keys</a> 页面，新建new SSH Key</strong></p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/v2-72a3f22c080e99343c3cc4aabce10e3c_hd.jpg" alt="v2-72a3f22c080e99343c3cc4aabce10e3c_hd"></p><p>Title：随便写</p><p>Key：粘贴刚刚复制的关键字</p><p>最后点击Add SSH key。</p><p>在Git Bash中检测GitHub公钥设置是否成功。</p><p>输入 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/查看是否连接.png" alt="查看是否连接"></p><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo基于Node.js，Node.js下载地址：<a href="http://link.zhihu.com/?target=https%3A//nodejs.org/en/download/" target="_blank" rel="noopener">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后。</p><p>检测Node.js是否安装成功，在终端中输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>检测npm是否安装成功，在终端中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/查看node安装状态.png" alt="查看node安装状态"></p><p>到这了，安装Hexo的环境已经全部搭建完成。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p><strong>1.终端下使用npm命令安装Hexo，输入</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这个安装时间较长耐心等待，安装完成后。注：这个时候可能会报错，没有关系正常现象。</p><p><strong>2.安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。初始化我们的博客路径为默认路径，输入（folder为文件名）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>注意，这里的命令都是作用在刚刚创建的<folder>文件夹中。</folder></p><p>为了检测我们的网站雏形，分别按顺序输入以下三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>过了漫长的等待如果<a href="http://localhost:4000/成功打开，那么就说明博客基本建立完成。" target="_blank" rel="noopener">http://localhost:4000/成功打开，那么就说明博客基本建立完成。</a></p><h3 id="推送站点"><a href="#推送站点" class="headerlink" title="推送站点"></a>推送站点</h3><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点</strong>配置文件，如下图</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/站点配置.png" alt="站点配置"></p><p>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题</strong>配置文件，如下图</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/主题配置.png" alt="主题配置"></p><p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">type: git</span><br><span class="line">repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>参考如下：</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/推送.png" alt="推送"></p><p>保存站点配置文件。</p><p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>这时，我们分别输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="http://link.zhihu.com/?target=http%3A//xxxx.github.io" target="_blank" rel="noopener">http://xxxx.github.io</a> (比如我的xxxx就是我的GitHub用户名：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TheMrxk.github.io</span><br></pre></td></tr></table></figure><p>你就会发现你的博客已经上线了，可以在网络上被访问了。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:<a href="http://link.zhihu.com/?target=http%3A//xxxx.github.io" target="_blank" rel="noopener">http://xxxx.github.io</a> ，而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。这里演示的是在阿里云的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/解析地址.png" alt="解析地址"></p><p>第一步，包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 <a href="http://link.zhihu.com/?target=http%3A//xxxx.github.io" target="_blank" rel="noopener">http://xxxx.github.io</a> 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.<a href="http://link.zhihu.com/?target=http%3A//github.io" target="_blank" rel="noopener">http://github.io</a> 这里千万别弄错了。</p><p>第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名点击save保存。</p><p>第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www):</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/cname.png" alt="cname"></p><p>保存，命名为CNAME ，注意保存成<strong>所有文件</strong>而不是<strong>txt文件</strong>。</p><p>完成这三步，进入blog目录中，按住shift键右击打开命令行，依次输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。</p><h2 id="配置站点"><a href="#配置站点" class="headerlink" title="配置站点"></a>配置站点</h2><h3 id="常用的Hexo-命令"><a href="#常用的Hexo-命令" class="headerlink" title="常用的Hexo 命令"></a>常用的Hexo 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g <span class="comment">#安装Hexo</span></span><br><span class="line">npm update hexo -g <span class="comment">#升级 </span></span><br><span class="line">hexo init <span class="comment">#初始化博客</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命令简写</span><br><span class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line">hexo d == hexo deploy #部署</span><br><span class="line">综合</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s #清除缓存生成及预览</span><br><span class="line">hexo clean &amp;&amp; hexo g -d #清除缓存生成及上传</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>先下载好你喜欢的主题，例如我的<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">NexT</a>，将站点主题拖动到themes的文件夹中，在站点配置文件中, 将<code>theme</code>字段改为<code>next</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><h3 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h3><p>参考文献：</p><p><a href="https://liolok.github.io/Hexo-and-NexT/" target="_blank" rel="noopener">梯子客户端收录</a></p><p><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></p><h3 id="添加播放器"><a href="#添加播放器" class="headerlink" title="添加播放器"></a>添加播放器</h3><p>打开网页版的网易云音乐，选择喜欢的音乐，点击生成外链播放器</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/网易云.png" alt="网易云"></p><p>复制外链的代码</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/外部代码.png" alt="外部代码"></p><p>在侧栏插入这首歌的音乐播放器，修改 blog\themes\next\layout_macro的sidebar.swig文件，添加刚刚复制的外链代码</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/WX20190202-085602.png" alt="WX20190202-085602"></p><p>重新生成、部署网页，效果如下</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/WechatIMG6142.png" alt="WechatIMG6142"></p><h2 id="写作方法"><a href="#写作方法" class="headerlink" title="写作方法"></a>写作方法</h2><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>我们开始正式发布上线博客文章，在命令行中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"博客名字"</span></span><br></pre></td></tr></table></figure><p>我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 <strong>博客名字.md</strong> 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了，Markdown常用的样式也就十来种，完全能够满足一般博文的样式要求，Mac推荐Typora。</p><p>给博客插入图片</p><p>1.首先把blog（hexo）目录下的_config.yml里的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psot_asset_folder:设置为<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>2.在blog（hexo）目录下执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>3.在blog（hexo）目录下Git Bash Here，运行hexo n “博客名”来生成md博客时，会在_post目录下看到一个与博客同名的文件夹。</p><p>4.将想要上传的图片先扔到文件夹下，然后在博客中使用<a href="https://www.baidu.com/s?wd=markdown&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">markdown</a>的格式引入图片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![你想要输入的替代文字](xxxx/图片名.jpg)</span><br></pre></td></tr></table></figure><p>ps：因为博客名和文件夹名字相同，所以不需要绝对路径，只要xxxx是文件夹的名字就可以了。</p><p><img src="/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/WX20190129-132315.png" alt="WX20190129-132315"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/01/29/GitHub-Hexo-搭建个人网站详细教程/v2-d4c1239e75c02e8482c22017a6c8d407_1200x500.jpg&quot; alt=&quot;v2-d4c1239e75c02e8482c22017a6c8d407_1
      
    
    </summary>
    
      <category term="web前端" scheme="https://blog.orghub.cn/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="个人博客" scheme="https://blog.orghub.cn/categories/web%E5%89%8D%E7%AB%AF/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://blog.orghub.cn/tags/Hexo/"/>
    
      <category term="搭建" scheme="https://blog.orghub.cn/tags/%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Test Title</title>
    <link href="https://blog.orghub.cn/2019/01/23/test-title/"/>
    <id>https://blog.orghub.cn/2019/01/23/test-title/</id>
    <published>2019-01-23T07:40:51.000Z</published>
    <updated>2019-01-27T11:44:09.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Welcome-to-TheMrxk-Blog"><a href="#Welcome-to-TheMrxk-Blog" class="headerlink" title="Welcome to TheMrxk Blog"></a>Welcome to TheMrxk Blog</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ This Is My First Blog!</span><br></pre></td></tr></table></figure><h3 id="Test-a-sentence"><a href="#Test-a-sentence" class="headerlink" title="Test a sentence"></a>Test a sentence</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Hellow Word~</span><br></pre></td></tr></table></figure><h3 id="Thank-you-everyone"><a href="#Thank-you-everyone" class="headerlink" title="Thank you everyone"></a>Thank you everyone</h3><p>Ps:如果你手速足够快的快，估计你是第一个看我博客的人，17点之前私聊我微信，过来领2块钱红包！🧧</p><p>More info：By TheMrxk 小开哥</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Welcome-to-TheMrxk-Blog&quot;&gt;&lt;a href=&quot;#Welcome-to-TheMrxk-Blog&quot; class=&quot;headerlink&quot; title=&quot;Welcome to TheMrxk Blog&quot;&gt;&lt;/a&gt;Welcome to TheMrx
      
    
    </summary>
    
      <category term="web前端" scheme="https://blog.orghub.cn/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="测试" scheme="https://blog.orghub.cn/categories/web%E5%89%8D%E7%AB%AF/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Hello" scheme="https://blog.orghub.cn/tags/Hello/"/>
    
      <category term="新建" scheme="https://blog.orghub.cn/tags/%E6%96%B0%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.orghub.cn/2017/10/28/hello-world/"/>
    <id>https://blog.orghub.cn/2017/10/28/hello-world/</id>
    <published>2017-10-28T00:39:58.000Z</published>
    <updated>2017-10-28T00:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
