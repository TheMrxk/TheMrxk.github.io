<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[小米Pro15.6 安装黑苹果兼MacOS Mojave安装教程]]></title>
    <url>%2F2019%2F02%2F03%2F%E5%B0%8F%E7%B1%B3PRO%E5%AE%89%E8%A3%85%E9%BB%91%E8%8B%B9%E6%9E%9C%2F</url>
    <content type="text"><![CDATA[小米Pro15.6 安装黑苹果兼MacOS Mojave安装教程写作/安装流程 1.下载镜像； 2.刻盘； 3.安装； 4.替换/完善EFI； Windows下制作macOS Mojave安装盘准备工具 U盘大于8G U 盘大小不限做 PE 盘 系统镜像下载：文章结尾 etcher 制作安装镜像 镜像制作 下载etcher 打开镜像 选择U盘 点击Flash即可 小米BIOS设置开机按F2进入BIOS设置 Security（1） 选择Set Supervisor Password，在Enter New Password这里输入密码，然后在Enter New Password Again这里重复输入密码，这一步是设置进入BIOS的密码。 Security（2） 再次进BIOS，依然在Security分类里选择Secure Boot Mode选项，将其设置为Disable，关闭安全模式。最后按F10，对你的刚才的设置进行保存并退出。 安装系统开机，按F12选择U盘引导 进入CLOVER主界面，直接回车，开始引导mac OS 很多的机友都是会在这个地方翻车。出现问题请私聊我反馈，请提供翻车照片及机器配置图。不提供任何信息直接发问就是耍流氓 这个过程需要1-2分钟,耐心等待，进入安装程序,出现语言选择界面 选择简体中文，点击继续 出现安装向导，点击继续 阅读许可协议，点击继续 点击同意，继续 出现安装界面，这里是让你选择安装磁盘 请点击菜单上面的实用工具-&gt;磁盘工具 出现磁盘工具，在磁盘工具里面所做的操作涉及到你的数据安全，请认真仔细确认后再操作，否则由此造成的一切后果本站概不承担。 点击窗口左上角的显示，选择显示所有设备 选择APPLE SSD macOS-0 SSD Media本例中为虚拟机中的磁盘名称，请根据你的设备选择相应的磁盘 点击抹掉， 假设您的磁盘是空的或者数据是已经备份过的,别怪我没提醒你!!! 在弹出的窗口中输入：名称：Mac；格式：Mac OS扩展(日志式)（10.13.X以上版本）APFS（10.14.X以上版本）；方案：GUID分区图，在点击抹掉按钮之前，请再次确认你的磁盘已经提前做了数据备份 点击抹除，然后等待操作结束 点击完成，通过菜单选择退出磁盘工具或者按窗口左上角红色按钮离开磁盘工具 返回到安装界面 选择Mac磁盘，点击继续 它会把USB安装盘上的安装文件预复制到要安装的系统分区里，这个过程通常会持续1-2分钟 重启后继续安装，在安装期间，通常会自动重启2-3遍 之所以有重启的动作是因为从Mac OS 10.13.x开始，苹果公司将默认的HFS磁盘分区强行换成APFS分区，它会在第二次重启之后做HFS-&gt;APFS转换的动作，转换成功后，继续安装过程。 重启重点第一次重启事实上Mac OS，已经完成的解压到了硬盘上，就跟Windows中拷贝U盘文件道理是一样的。 所以无论是第几次重启，哪怕是第一次，也可以直接进入Windows系统继续如下操作，因为这个时候Mac的基本配置文佳已经拷贝完成了。 合并或粘贴EFI脱离USB运行[Windows篇单硬盘版]基于最新版本的MacOS是不继承任何EFI 的，也就是说除了集成Clover，没有任何驱动的配置，所以若U盘中不替换EFI是无法正常启动桌面的，尽管配置成功，开机跑代码也会提示。所以这个时候就要借着重启的机会，提前合并粘贴EFI文件。 重启电脑正常开机进入Windows桌面，打开DG（DiskGenius分区工具）找到ESP分区，点击右侧的浏览文件 合并EFI打开ESP文件夹（这里要注意的是，现在有的文件夹，都是Windows的，一定不要直接删除，否则Win系统无法开机） 再次强调，若之前安装过Win系统，想要做双系统的朋友，只需要拷贝EFI文件中的CLOVER文件夹即可！剩下的都不需要动。用快捷键粘贴进去。 粘贴以后的样子，可能会多出一个APPLE文件夹，不需要搭理。 [Windows篇双硬盘版]重启电脑正常开机进入Windows桌面，打开DG（DiskGenius分区工具）找到ESP分区，点击右侧的浏览文件 这里我就不放图了，原理与单硬盘版相同，只不过是找到你安装Mac OS的那个硬盘 粘贴EFI直接将EFI文件夹里面的所有文件复制到ESP分区,这里给大家看一下我的，直接带着EFI粘贴进去就可以了里面的都不要管 添加启动项到BIOS[Windows篇单硬盘版]打开BOOTICE，看图操作，图上有序号 添加盘符 设置启动项添加盘符以后，添加启动项，并且改变启动项的顺序，若开机为Clover启动，请调执第一位。 [Windows篇双硬盘版]开机进BIOS设置启动项顺序，一般主板应该是boot选项卡中调节，调第一启动项为你的Mac OS分区。 继续执行Mac OS 的重启 重启重点这时候你可以拔掉U盘扔掉了。 本次重启是继续之前未完成的重启，进入你的Mac OS的安装的硬盘（这里Mac OS 的安装硬盘因为拔掉了U盘并且替换好EFI应该就只有一个了），继续安装系统时的重启过程 第二阶段重启第二阶段的安装会有两种界面,一种是不进安装界面直接安装,另一种是先进入安装界面直接安装,需要注意的是,无论是哪一种界面下,安装的过程中全程是禁用鼠标和键盘的,需要你做的只是耐心等待它安装完成 设置向导选择国家：中国 设置键盘 你可以添加自己熟悉的输入法，然后点击继续，出现数据与隐私，阅读后点击继续 选择不传输任何信息，点击继续 点击稍后设置 出现您确定要中法使用Apple ID来登录吗？，点击跳过 出现条款与条件，点击同意 出现我已经阅读并同意&quot;macOS软件许可协议&quot;，点击同意 出现创建电脑用户的窗口,输入用户名和密码,点击继续 创建电脑用户用户自己编辑 系统会创建初始用户，接着进行快捷设置 弹出界面，让你选择外观，您可以根据个人的喜好选择浅色主题或者深色主题，点击继续 出现正在设置您的Mac,请稍候完成设置向导 设置向导完成，根据选择主题的不同，分别进入不同的界面 进入桌面 出现桌面后,整个的安装向导就完成了。 安装后的系统设置如果没有什么问题，看到开机页面了，那么聪明的你说明你的黑苹果系统已经安装成功了。 快捷键的小修改很多人习惯了Windows，所以这里的快捷键做一下调整，如下修改就可以了 下载链接MacOS：链接: https://pan.baidu.com/s/1z96tO0D0cZu0EU5McNG09A 提取码: iusp 12.28EFI：链接: https://pan.baidu.com/s/1t2dHHV0uFYRSVe-IA4wRBQ 提取码: n4ff 鸣谢与支持Mac OS、EFI文件及部分文章图片转载于黑果小兵的部落阁 文章如又不懂的地方，可以添加我的微信，或者QQ，952339610，即可在线咨询！]]></content>
      <categories>
        <category>黑苹果</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>黑苹果</tag>
        <tag>小米</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub-Hexo-搭建个人网站详细教程]]></title>
    <url>%2F2019%2F01%2F29%2FGitHub-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[什么是Hexo ? Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我们选用的是GitHub，你没看错，全球最大的同性恋交友网站（逃……）。Hexo同时也是GitHub上的开源项目，参见：hexojs/hexo 如果想要更加全面的了解Hexo，可以到其官网 Hexo 了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。这里，默认各位猿/媛儿都知道GitHub就不再赘述。 这是我的个人博客效果: TheMrxk· Blog 下面正式从零开始搭建年轻人的第一个网站。 搭建步骤： 获得个人网站域名 GitHub创建个人仓库 安装Git 安装Node.js 安装Hexo 推送网站 绑定域名 常用的Hexo 命令 更换主题 个性化设置 添加播放器 发布文章 获得个人网站域名域名是网站的入口，也是网站的第一印象，比如饿了么的官网的域名是：https://www.ele.me/ ，很是巧妙。常见的有com,cn,net,org等后缀，也有小众的xyz,me,io等后缀，根据你自己的喜好，选择不同的后缀，比如我选择就是常见的com后缀。很多小众奇特的后缀在大陆是没办法备案的，网站也就无法上线。然而使用GitHub托管我们的网站，完全不需要备案，因为托管我们的网站内容的服务器在美国，而且在国内备案流程也比较繁杂，时间需要一周左右。 申请域名的地方有很多，这里推荐阿里云：阿里云-为了无法计算的价值 申请入口：域名注册 购买域名这也是我们整个搭建过程中惟一一个需要花钱的地方。如果你已经有了空闲域名就无需购买，直接使用即可。 GitHub创建个人仓库登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：Build software better, together 点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.http://github.io 这个用户名使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为： 安装Git什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。从Git官网下载：Git - Downloading Package 现在的机子基本都是64位的，选择64位的安装包，下载后安装。 在命令行里输入git测试是否安装成功。 首先查看电脑是否安装的Git，终端输入： 1git 安装过则会输出：即表示成功安装 若安装失败，参看其他详细的Git安装教程。 Mac终端为例直接输入： 1brew install git 安装成功后，将你的Git与GitHub帐号绑定， 创建ssh key，配置git1，设置用户名和电子邮件（Github上每次提交都会记录他们） 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub邮箱&quot; 2，通过终端命令创建ssh密钥 1ssh-keygen -t rsa -C &quot;你的GitHub邮箱&quot; `952339610@qq.com`是我的邮件名，回车会有以下输出 1234567Last login: Sat Jan 6 14:12:16 on ttys000WMBdeMacBook-Pro:~ *******$ ssh-keygen -t rsa -C "952339610@qq.com"Generating public/private rsa key pair.Enter file in which to save the key (/Users/*******/.ssh/id_rsa): /Users/*******/.ssh/id_rsa already exists.Overwrite (y/n)? nWMBdeMacBook-Pro:~ *******$ 由于这里我原来已经创建过，这里我选n，没有创建过的，会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在〜/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的关键。 终端查看.ssh/id_rsa.pub文件 1open .ssh/id_rsa.pub 回车后，就会新弹出一个终端，然后复制里面的关键字段。 3，打开GitHub_Settings_keys 页面，新建new SSH Key Title：随便写 Key：粘贴刚刚复制的关键字 最后点击Add SSH key。 在Git Bash中检测GitHub公钥设置是否成功。 输入 ： 1ssh git@github.com 如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。 安装Node.jsHexo基于Node.js，Node.js下载地址：Download | Node.js 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后。 检测Node.js是否安装成功，在终端中输入 1node -v 检测npm是否安装成功，在终端中输入 1npm -v 到这了，安装Hexo的环境已经全部搭建完成。 安装Hexo1.终端下使用npm命令安装Hexo，输入 1npm install -g hexo-cli 这个安装时间较长耐心等待，安装完成后。注：这个时候可能会报错，没有关系正常现象。 2.安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。初始化我们的博客路径为默认路径，输入（folder为文件名） 123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 注意，这里的命令都是作用在刚刚创建的文件夹中。 为了检测我们的网站雏形，分别按顺序输入以下三条命令： 1hexo g &amp;&amp; hexo s 过了漫长的等待如果http://localhost:4000/成功打开，那么就说明博客基本建立完成。 推送站点上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件，如下图 进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件，如下图 下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为： 1234deploy: type: gitrepo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .gitbranch: master 参考如下： 保存站点配置文件。 其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令： 1npm install hexo-deployer-git --save 这时，我们分别输入命令： 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 http://xxxx.github.io (比如我的xxxx就是我的GitHub用户名： 1TheMrxk.github.io 你就会发现你的博客已经上线了，可以在网络上被访问了。 绑定域名虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:http://xxxx.github.io ，而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。这里演示的是在阿里云的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析 第一步，包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 http://xxxx.github.io 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.http://github.io 这里千万别弄错了。 第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名点击save保存。 第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www): 保存，命名为CNAME ，注意保存成所有文件而不是txt文件。 完成这三步，进入blog目录中，按住shift键右击打开命令行，依次输入： 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。 配置站点常用的Hexo 命令123npm install hexo -g #安装Hexonpm update hexo -g #升级 hexo init #初始化博客 12345678命令简写hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署综合hexo clean &amp;&amp; hexo g &amp;&amp; hexo s #清除缓存生成及预览hexo clean &amp;&amp; hexo g -d #清除缓存生成及上传 12345hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 更换主题先下载好你喜欢的主题，例如我的NexT，将站点主题拖动到themes的文件夹中，在站点配置文件中, 将theme字段改为next 1theme: next 个性化设置参考文献： 梯子客户端收录 hexo的next主题个性化配置教程 添加播放器打开网页版的网易云音乐，选择喜欢的音乐，点击生成外链播放器 复制外链的代码 在侧栏插入这首歌的音乐播放器，修改 blog\themes\next\layout_macro的sidebar.swig文件，添加刚刚复制的外链代码 重新生成、部署网页，效果如下 写作方法发布文章我们开始正式发布上线博客文章，在命令行中输入： 1hexo n "博客名字" 我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了，Markdown常用的样式也就十来种，完全能够满足一般博文的样式要求，Mac推荐Typora。 给博客插入图片 1.首先把blog（hexo）目录下的_config.yml里的 1psot_asset_folder:设置为true 2.在blog（hexo）目录下执行: 1npm install hexo-asset-image --save 3.在blog（hexo）目录下Git Bash Here，运行hexo n “博客名”来生成md博客时，会在_post目录下看到一个与博客同名的文件夹。 4.将想要上传的图片先扔到文件夹下，然后在博客中使用markdown的格式引入图片： 1![你想要输入的替代文字](xxxx/图片名.jpg) ps：因为博客名和文件夹名字相同，所以不需要绝对路径，只要xxxx是文件夹的名字就可以了。]]></content>
      <categories>
        <category>web前端</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test Title]]></title>
    <url>%2F2019%2F01%2F23%2Ftest-title%2F</url>
    <content type="text"><![CDATA[Welcome to TheMrxk Blog1$ This Is My First Blog! Test a sentence1$ Hellow Word~ Thank you everyonePs:如果你手速足够快的快，估计你是第一个看我博客的人，17点之前私聊我微信，过来领2块钱红包！🧧 More info：By TheMrxk 小开哥]]></content>
      <categories>
        <category>web前端</category>
        <category>测试</category>
      </categories>
      <tags>
        <tag>Hello</tag>
        <tag>新建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F10%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
